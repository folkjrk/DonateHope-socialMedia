'use strict';

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _process = require('process');

var _process2 = _interopRequireDefault(_process);

var _render = require('./../render');

var _render2 = _interopRequireDefault(_render);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var base_path = _process2.default.cwd();

var config_path_flag = false;
var config_path = _path2.default.resolve(base_path, './render.config.js');

_process2.default.argv.forEach(function (val, index, array) {
  if (index === 0 || index === 1) return;

  if (val === "--config") {
    config_path_flag = true;
    return;
  }
  if (config_path_flag) {
    config_path = _path2.default.resolve(base_path, val);
    config_path_flag = false;
    return;
  }
});

var config = require(config_path);
var entry = config.entry;
if (entry === undefined) {
  throw new Error('You do not set "entry"');
}

var output_setting = void 0;
if (config.output === undefined) {
  output_setting = {
    filename: "[name].html",
    path: _path2.default.resolve(config_path, '..')
  };
} else {
  output_setting = {
    filename: config.output.filename === undefined ? "[name].html" : config.output.filename,
    path: config.output.path === undefined ? _path2.default.resolve(config_path, '..') : _path2.default.resolve(config_path, '..', config.output.path)
  };
}

var output = [];
for (var name in entry) {
  if (entry[name] instanceof Object) {
    output.push((0, _render2.default)(name, entry[name].path, entry[name].options, config_path));
  } else {
    throw new Error("You need to set name as 'Object'");
  }
}

console.log();

var _loop = function _loop(index) {
  var name = output[index].name;
  var html = output[index].html;
  var filename = output_setting.filename.indexOf("[name]") !== -1 ? output_setting.filename.replace("[name]", name) : name + output_setting.filename;
  var output_path = _path2.default.resolve(config_path, '..', output_setting.path, filename);

  _fs2.default.writeFile(output_path, html, function (err) {
    if (err) return console.log(err);

    console.log(filename + " success!");
    console.log("--> " + output_path);
    console.log();
  });
};

for (var index in output) {
  _loop(index);
}